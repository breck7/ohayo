tooling onsave jtree build produceOhayoGrammar
dummyDataSetIdCell
 enum ohayoPrograms waterBill gapMinder markdown webPages outerSpace wordCounts treeProgram poem playerGoals patients regionalMarkets stockPrice
tileEventNameCell
 enum fetchTableInputs getTileBodyStumpCode treeComponentDidMount treeComponentDidUpdate
debugParserTestNode
 description Dumps data on why a certain file parser was chosen.
 example See why a certain file parser was chosen.
  vega.data descriptions.json
   debug.parserTest
    tables.basic
 extends abstractProviderNode
 crux debug.parserTest
 javascript
  async fetchTableInputs() {
   const parentTile = this.getParent()
   if (parentTile.getWillowHttpResponse) {
    const probs = new TableParser().guessProbabilitiesForAllTableParsers(parentTile.getWillowHttpResponse().text)
    return {
     rows: Object.keys(probs).map(key => {
      return {
       parser: key,
       probability: probs[key]
      }
     })
    }
   }
   return [{ rows: [] }]
  }
debugDumpNode
 description Dumps data from content or dump's first column input as 1 concatenated string.
 example Print a poem.
  samples.poem
   debug.dump
 extends abstractChartNode
 crux debug.dump
 string bodyStumpTemplate
  div
   style overflow: scroll; width: 100%; height: 100%; white-space: pre;
   bern
    {text}
 javascript
  _getCharacterLimit() {
   // Todo: great example of a scale test. I found it to be slow with:
   /*
  vega.sample movies.json
   web.dump
  So some tiles will have characterLimit, rowDisplayLimit, et cetera. And have "speedTestExamples" .
  */
   return 20000
  }
  getTileBodyStumpCode() {
   const text = this._getTextToDump()
   const characterLimit = this._getCharacterLimit()
   let sub = text.substr(0, characterLimit)
   if (text.length > characterLimit)
    // todo: Show standardized truncation warning
    sub = `<i>(Notice: Results truncated to ${characterLimit} characters)</i><br>` + sub
   return this.qFormat(this.bodyStumpTemplate, {text: sub || "No data to dump"})
  }
  _getTextToDump() {
   return this.getPipishInput()
  }
debugCommandsNode
 description Tools for ohayo developers.
 tags noPicker
 example Show debug commands
  debug.commands
 extends abstractChartNode
 crux debug.commands
 string bodyStumpTemplate
  a Run Speed Test on all Files in Working Directory
   clickCommand _runSpeedTestCommand
  br
  a Run Tile Quality Check
   clickCommand _doTileQualityCheckCommand
 javascript
  getTileBodyStumpCode() {
   return this.bodyStumpTemplate
  }
debugGrammarNode
 description Get the ohayo grammar
 tags noPicker
 cells tileKeywordCell
 crux debug.ohayoGrammar
 extends abstractProviderNode
 example Print the ohayo grammar
  debug.ohayoGrammar
   treenotation.outline
 javascript
  async fetchTableInputs() {
   return { rows: [{ text: new ohayoNode("").getHandGrammarProgram().toString() }] }
  }
debugGrammarTreeNode
 description Show the family tree for ohayo grammar.
 tags noPicker
 cells tileKeywordCell
 example Show the family tree for ohayo grammar
  debug.ohayoGrammarTree
   treenotation.outline
 extends abstractProviderNode
 crux debug.ohayoGrammarTree
 javascript
  async fetchTableInputs() {
   return { rows: [{ text: new ohayoNode("").getHandGrammarProgram().getNodeTypeFamilyTree().toString() }] }
  }
debugSleepNode
 cells tileKeywordCell millisecondsCell dummyDataSetIdCell
 description Sleeps for a few seconds and then loads data. Useful for testing and development.
 example Sleep for 1 second then load data
  debug.sleep 100 waterBill
   tables.basic
 string dummyDataSetName waterBill
 extends abstractChartNode
 crux debug.sleep
 javascript
  async fetchTableInputs() {
   const ms = parseInt(this.getWord(1) || 1)
   await this.getWebApp()
    .sleepCommand(ms)
   return { rows: jtree.Utils.javascriptTableWithHeaderRowToObjects(DummyDataSets[this.getWord(2) || "stockPrice"]) }
  }
debugNoOpNode
 cells tileKeywordCell
 catchAllCellType anyCell
 description A noop.
 boolean visible false
 crux debug.noop
 extends abstractChartNode
debugThrowNode
 description Throws an error during load. Used for testing.
 cells tileKeywordCell tileEventNameCell
 example Throw an error
  samples.poem
  debug.throw fetchTableInputs
 extends abstractChartNode
 crux debug.throw
 javascript
  async fetchTableInputs() {
   this._throwIfMethodNameIs("fetchTableInputs")
   return {
    rows: []
   }
  }
  _throwIfMethodNameIs(name) {
   // Never throw if no word provided. That ensures it wont throw during testing.
   const lookingFor = this.getContent()
   if (lookingFor === name) throw new Error(`DebugTile threw an error on purpose on event: "${lookingFor}"`)
  }
  getTileBodyStumpCode() {
   this._throwIfMethodNameIs("getTileBodyStumpCode")
  }
  treeComponentDidMount() {
   this._throwIfMethodNameIs("treeComponentDidMount")
  }
  treeComponentDidUpdate() {
   this._throwIfMethodNameIs("treeComponentDidUpdate")
  }