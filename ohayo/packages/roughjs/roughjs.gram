tooling onsave jtree build produceOhayoGrammar
roughnessCell
 extends intCell
 todo add min of 0 and max of 20
roughnessNode
 cells tileSettingKeywordCell roughnessCell
 description Roughness level of chart. Default is 1.
 extends abstractTileSettingTerminalNode
 crux roughness
colorsNode
 cells tileSettingKeywordCell
 catchAllCellType anyCell
 description Colors to use for the lines.
 extends abstractTileSettingTerminalNode
 crux colors
abstractRoughJsChartNode
 description Create sketchy/hand-drawn styled charts https://github.com/jwilber/roughViz
 string tileScript ohayo/packages/roughjs/roughviz.min.js
 extends abstractChartNode
 abstract
 catchAllCellType titleCell
 inScope roughnessNode
 javascript
  _getRoughId() {
    return `rough${this._getUid()}`
  }
  treeComponentDidUpdate() {
   super.treeComponentDidUpdate()
   if (this.isNodeJs()) return undefined
   this._drawRough()
  }
  treeComponentDidMount() {
   this.treeComponentDidUpdate()
  }
  getTileBodyStumpCode() {
   return this.qFormat(this.bodyStumpTemplate, { id: this._getRoughId() })
  }
  get _roughness() {
    const value = this.get("roughness")
    return value ? parseInt(value) : 1
  }
  _getOptions() {
    return {}
  }
  _drawRough() {
   const colors = this.get("colors") ? this.get("colors").split(" ") : undefined
   const options = Object.assign(this._getOptions(), {
    title: this.getContent() || "",
    element: '#' + this._getRoughId(),
    roughness: this._roughness,
    width: this.getTileRunTimeWidth(),
    height: this.getTileRunTimeHeight(),
    colors,
    data: this._getRoughData()
    })
   const roughEl = new roughViz[this.roughChartType](options)
  }
  _getValues(settingName) {
    const columName = this.mapSettingNamesToColumnNames([settingName])[0]
    return this.getParentOrDummyTable().getColumnByName(columName).getValues()
  }
 string bodyStumpTemplate
  div
   id {id}
abstractRoughJsLabelValueNode
 extends abstractRoughJsChartNode
 string dummyDataSetName stockPrice
 abstract
 string columnPredictionHints
  value getPrimitiveTypeName=number
 javascript
  _getRoughData() {
    const data = {labels: this._getValues("label"), values: this._getValues("value")}
    console.log(data)
    return data
  }
roughJsBarNode
 crux roughjs.bar
 inScope labelNode valueNode
 extends abstractRoughJsLabelValueNode
 string roughChartType Bar
 example
  samples.waterBill
   roughjs.bar Past Year's Water Bill
    label PaidOn
    value Amount
roughJsLineNode
 inScope colorsNode
 crux roughjs.line
 extends abstractRoughJsChartNode
 string roughChartType Line
 example
  samples.waterBill
   roughjs.line Water Bill
 javascript
  _getNumericColumns() {
    return Object.values(this.getParentOrDummyTable().getColumnsMap()).filter(col => col.isNumeric())
  }
  _getRoughData() {
    const data = {}
    const numerics = this._getNumericColumns()
    numerics.forEach(col => {
      data[col.getColumnName()] = col.getValues()
      })
    return data
  }
  _getOptions() {
    const options = {}
    const numerics = this._getNumericColumns()
    numerics.forEach((col, index) => {
      options["y" + index] = col.getColumnName()
      })
    return options
  }
roughJsPieNode
 inScope labelNode valueNode
 crux roughjs.pie
 extends abstractRoughJsLabelValueNode
 string roughChartType Pie