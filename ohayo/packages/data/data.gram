tooling onsave jtree build produceOhayoGrammar
localStorageKeyCell
schemaSimpleCell
 highlightScope string
 examples name:string score:int
columnDefinitionNode
 cells columnNameCell primitiveTypeCell
schemaNode
 crux schema
 description A basic schema language consisting of one column name followed by a primitive column type per line.
 cells tileSettingKeywordCell
 catchAllNodeType columnDefinitionNode
 javascript
  toJTableColumnDefinitionMap() {
   return this.map(row => {
    return {
     name: row.getWord(0),
     type: row.getWord(1)
    }
   })
  }
dataSynthNode
 description Synthesizes new datasets based upon the parent tiles schema.
 crux data.synth
 catchAllCellType schemaSimpleCell
 extends abstractTransformerNode
 inScope schemaNode
 javascript
  _createOutputTable() {
   const schema = this._getSchema()
   const table = !schema ? this.getParentOrDummyTable() : new Table([], schema)
   return table.synthesizeTable(this.intCell || 30, Date.now())
  }
  _getSchema() {
   const schema = this.getNode("schema")
   if (schema) return schema.toJTableColumnDefinitionMap()
   const words = this.getWordsFrom(2)
   if (words.length)
    return words.map(word => {
     const parts = word.split(":")
     return {
      name: parts[0],
      type: parts[1]
     }
    })
  }
 cells tileKeywordCell intCell
 example
  samples.iris
   data.synth 100
    show.rowCount
 example
  data.synth 100
   schema
    name string
    score int
    finished boolean
   show.columnCount
 example
  data.synth 100 name:string score:int finished:boolean
dataAboutNode
 extends abstractTransformerNode
 description Gets metadata about a dataset.
 crux data.about
 javascript
  _getDataSetInfo() {
   const parentTile = this.getParent()
   const def = parentTile.getDefinition()
   return {
    licenseSpecified: parentTile.isDataPublicDomain,
    tags: def.get("tags"),
    overviewDescription: parentTile.dataDescription || def.get("description"),
    dataUrl: parentTile.dataUrl
   }
  }
  _createOutputTable() {
   return new Table([this._getDataSetInfo()])
  }
dataUsabilityScoreNode
 extends dataAboutNode
 description Generates a Data Usability Score for the input table.
 crux data.usabilityScore
 example
  samples.iris
   data.usabilityScore
    tables.basic
    show.max score
 javascript
  _createOutputTable() {
   const row = this._getDataSetInfo()
   // todo: a very simplistic approximation of Kaggle's data usability score
   row.score = Object.values(row).filter(item => !!item).length * 2.5
   return new Table([row])
  }
dataInlineNode
 inScope contentNode parserNode treeLanguageNode
 frequency .2
 description Store data in your doc, in CSV, TSV, JSON, and other formats.
 example
  data.inline
   parser csv
   content
    petal_length,petal_width,species
    4.9,1.8,virginica
    4.9,2,virginica
    1.5,0.2,setosa
 string bodyStumpTemplate
  textarea
   name content
   changeCommand changeTileSettingMultilineCommand
   placeholder Enter data in any format here. It will be saved directly in your document.
   class TileTextArea savable
   bern
    {text}
 javascript
  getDataContent() {
   const node = this.getNode("content")
   return node ? node.childrenToString() : ""
  }
  getTileBodyStumpCode() {
   const text = lodash.escape(this.getDataContent())
   return this.qFormat(this.bodyStumpTemplate, { text })
  }
  getRowClass() {
   class InlineDataTileRow extends Row {}
   return InlineDataTileRow
  }
  getParserId() {
   return super.getParserId() || new TableParser().guessTableParserId(this.getDataContent())
  }
  async fetchTableInputs() {
   return new TableParser().parseTableInputsFromString(this.getDataContent(), this.getParserId())
  }
 string tileSize 280 220
 extends abstractProviderNode
 crux data.inline
dataLocalStorageNode
 cells tileKeywordCell localStorageKeyCell
 description Use your browser's localStorage for storing data.
 string bodyStumpTemplate
  textarea
   changeCommand triggerTileMethodCommand
   placeholder Enter data in any format here. It will be saved in your browser's localStorage.
   name storeValueCommand
   class TileTextArea savable
   bern
    {text}
 example
  data.localStorage a-dropped-file.csv
 javascript
  // Note: for now, only way to clear a key is to do it manually through UI (select all delete) or console. That might be good enough.
  _getStoreKey() {
   return this.getContent()
  }
  getDataContent() {
   const key = this._getStoreKey()
   return key ? this.getWebApp().getFromStore(key) || "" : ""
  }
  storeValueCommand(value) {
   let key = this._getStoreKey()
   if (key) this.getWebApp().storeValue(key, value)
   else this.setContent(this.getWebApp().initLocalDataStorage(this.constructor.name + ".data", value))
  }
  getTileBodyStumpCode() {
   const text = lodash.escape(this.getDataContent())
   return this.qFormat(this.bodyStumpTemplate, { text })
  }
 extends dataInlineNode
 crux data.localStorage
dataEvalNode
 description Passes input rows, if any, to a Javascript function and returns transformed or new rows.
 example Generate some data.
  data.eval
   content
    inputRows => [{name: "Swift", year: 2015}, {name: "Kotlin", year: 2011}]
   tables.basic
 inScope contentNode
 extends abstractNewRowsTransformerTileNode
 crux data.eval
 javascript
  makeNewRows() {
   const node = this.getNode(this.contentKey)
   const code = node && node.childrenToString() // "rows => { return []}"
   let fn
   try {
    fn = code && eval(code)
   } catch (err) {
    // todo: warn user
    console.error(err)
   }
   const inputRows = this.getParentOrDummyTable().cloneNativeJavascriptTypedRows()
   return fn ? fn(inputRows) : inputRows
  }