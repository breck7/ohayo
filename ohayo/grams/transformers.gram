tooling onsave jtree build produceOhayoGrammar
abstractTransformerNode
 string tileSize 160 100
 extends abstractProviderNode
 string placeholderMessage 
 abstract
 string bodyStumpTemplate
  span {kind}
   class LargeLabel
  input
   value {content}
   placeholder {placeholderMessage}
   changeCommand changeTileContentAndRenderCommand
   class LargeTileInput
 string tileFooterTemplate
  span Rows In: {inputCount} Rows Out: {outputCount} Columns Out: {columnCount}
  {toolbarButton}
 javascript
  getTileFooterStumpCode() {
   const table = this.getParentOrDummyTable()
   const inputCount = table.getRowCount()
   const outputTable = this.getOutputOrInputTable()
   return this.qFormat(this.tileFooterTemplate, {inputCount, outputCount: table.getRowCount(), columnCount: outputTable.getColumnCount(), toolbarButton: this.getTileToolbarButtonStumpCode()})
  }
  async _execute() {
   this._outputTable = this._createOutputTable()
   this.setIsDataLoaded(true)
   await this._executeChildNodes()
  }
  getTileBodyStumpCode() {
   return this.qFormat(this.bodyStumpTemplate, {kind: this.getFirstWord(), content : this.getContent() || "", placeholderMessage: this.placeholderMessage})
  }
abstractColumnAdderTileNode
 abstract
 extends abstractTransformerNode
 javascript
  _createOutputTable() {
   return this.getParentOrDummyTable().addColumns(this.getNewColumns())
  }
abstractNewRowsTransformerTileNode
 abstract
 extends abstractTransformerNode
 javascript
  _createOutputTable() {
   // todo: remove this
   return new Table(this.makeNewRows())
  }
abstractColumnFilterTileNode
 abstract
 extends abstractTransformerNode
 javascript
  _createOutputTable() {
   return this.getParentOrDummyTable().dropAllColumnsExcept(this.getColumnNamesToKeep())
  }
abstractTransformerNoParamsTileNode
 abstract
 extends abstractTransformerNode
 javascript
  getTileBodyStumpCode() {
   return `span ${this.getFirstWord()}
  class LargeLabel`
  }
abstractRowFilterTileNode
 abstract
 extends abstractTransformerNode
 string placeholderMessage Enter a string to filter by.
 javascript
  // todo: pass thru.
  // todo: remove this?
  _createOutputTable() {
   const fn = this.getRowFilterFn()
   if (!fn) return this.getParentOrDummyTable().clone()
   return this.getParentOrDummyTable().filterRowsByFn(fn)
  }