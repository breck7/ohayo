tooling onsave jtree build produceMaiaGrammar
handsontableBasicNode
 description A spreadsheet-like table.
 string tileSize 1200 500
 string tileCssScript maia/packages/handsontable/handsontable.min.css
 string tileScript maia/packages/handsontable/handsontable.full.min.js
 string hakonTemplate
  .hot
   color black
 javascript
  getTileBodyStumpCode() {
   return `div
  class hot`
  }
  // todo: allow editing
  treeComponentWillUnmount() {
   if (this._hot) this._hot.destroy()
   delete this._hot
  }
  treeComponentDidUpdate() {
   super.treeComponentDidUpdate()
   const table = this.getParentOrDummyTable()
   const columnDefs = table.getColumnsByImportance()
   const colNames = columnDefs.map(col => col.getColumnName())
   const rows = this.getRowsWithRowDisplayLimit()
   const data = this.getRowsAsDataTableArrayWithHeader(rows, colNames)
   const tileDimension = this.getTileDimensionIfAny()
   const width = tileDimension.width - 20 // remove 10 for boddy padding?
   const height = tileDimension.height - 60
   const container = this.getStumpNode().findStumpNodeByChild("class hot")
   const app = this.getWebApp()
   if (this.isNodeJs()) return undefined
   this._hot = new Handsontable(container.getShadow().getShadowElement(), {
    data: data,
    rowHeaders: true,
    colHeaders: true,
    stretchH: "all",
    width: width,
    minSpareCols: 10,
    minSpareRows: 30,
    afterSelection: () => app.pauseShortcutListener(),
    afterDeselect: () => app.startShortcutListener(),
    height: height
   })
   return this._hot
  }
  treeComponentDidMount() {
   this.treeComponentDidUpdate()
  }
 extends abstractChartNode
 crux handsontable.basic