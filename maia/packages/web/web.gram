tooling onsave jtree build produceMaiaGrammar
webGetNode
 description Get a URL and parse the fetched data.
 example Fetch a TSV from the web and show results
  web.get https://raw.githubusercontent.com/treenotation/ohayo/master/maia/packages/samples/iris.tsv
   tables.basic
 frequency .1
 string placeholderMessage Enter a url.
 string bodyStumpTemplate
  span {kind}
   class LargeLabel
  input
   value {content}
   placeholder {placeholderMessage}
   changeCommand changeTileContentAndRenderCommand
   class LargeTileInput
 javascript
  getTileBodyStumpCode() {
   return this.qFormat(this.bodyStumpTemplate, {kind: this.getFirstWord(), content : this.getContent() || "", placeholderMessage: this.placeholderMessage})
  }
 string tileSize 400 100
 extends abstractUrlNode
 crux web.get
catchAllNodesPostContentNode
 catchAllCellType anyCell
 extends abstractTileSettingNonTerminalNode
 crux catchAllNodesPostContent
postNode
 catchAllNodeType catchAllNodesPostContentNode
 extends abstractTileSettingNonTerminalNode
 crux post
webPostNode
 frequency .02
 description Post data to a URL and parse the returned data.
 inScope postNode
 string webPostBodyStumpTemplate
  textarea
   bern
    {post}
   placeholder This data will be sent as the value of the 'q' param
   name post
   changeCommand changeTileSettingMultilineCommand
   class TileTextArea
 javascript
  getTileBodyStumpCode() {
   return super.getTileBodyStumpCode() + this.qFormat(this.webPostBodyStumpTemplate, {post: jtree.Utils.stripHtml(this.getSettingsStruct().post || "")})
  }
  async _getData(url) {
   const settings = this.getSettingsStruct()
   // todo, but make a separate tile
   // if (settings.pushButton) {
   //   if (!settings.pushed) return ""
   //   settings.pushed = false
   // }
   const postData = settings.post || ""
   const res = await this.getWebApp()
    .getWillowBrowser()
    .httpPostUrl(url, { q: postData.trim() })
   this._setWillowHttpResponse(res)
   return res.getParsedDataOrText()
  }
 string tileSize 400 130
 extends abstractUrlNode
 crux web.post
webDumpNode
 frequency .02
 description Dump the raw text from the web request.
 extends debugDumpNode
 javascript
  _getTextToDump() {
   return this.getParent().getWillowHttpResponse ? this.getParent().getWillowHttpResponse().text : `${this.constructor.name} requires a parent web tile.`
  }
 crux web.dump