tooling onsave jtree build produceMaiaGrammar
abstractChartNode
 inScope rowDisplayLimitNode
 int rowDisplayLimit 10000
 extends abstractMaiaTileNode
 abstract
 javascript
  getTileFooterStumpCode() {
   const table = this.getParentOrDummyTable()
   return `${this.getTileToolbarButtonStumpCode()}
  span Rows: ${table.getRowCount()} Columns Out: ${table.getColumnCount()}`
  }
  toDisplayString(value, columnName) {
   // todo: remove.
   if (value === undefined) return ""
   return this.getParentOrDummyTable()
    .getTableColumnByName(columnName)
    .toDisplayString(value)
  }
  _getRowDisplayLimit() {
   const limitStr = this.getSettingsStruct()[this.rowDisplayLimitKey] || this.rowDisplayLimit
   const limit = parseInt(limitStr)
   if (!limitStr || isNaN(limit)) return undefined
   return limit
  }
  getRowsWithRowDisplayLimit() {
   return this.getParentOrDummyTable()
    .getRows()
    .slice(0, this._getRowDisplayLimit())
  }
abstractHeaderlessChartTileNode
 abstract
 extends abstractChartNode
 int headerHeight 0
 string tileStumpTemplate
  div
   class {classes}
   id {id}
   contextMenuCommand openTileContextMenuCommand
   div
    class TileGrabber
    doubleClickCommand toggleTileMaximizeCommand
   div
    class TileBody HeaderLess
    {body}
   div
    class TileFooter
    {footer}
   div
    class TileGrabber
 javascript
  toStumpCode() {
   return this.qFormat(this.tileStumpTemplate, { classes: this.getCssClassNames().join(" "), id: this.getTreeComponentId(), body: this._getBodyStumpCodeCache(), footer: this.getTileToolbarButtonStumpCode() })
  }
  get _tileWidth() {
   return this.getTileDimensionIfAny().width - 10
  }
  get _tileHeight() {
   return this.getTileDimensionIfAny().height - 60 // 10 for padding. 10 for top grabber. 30 for footer. 10 fot bottom grabber.
  }
abstractEmptyFooterTileNode
 abstract
 extends abstractHeaderlessChartTileNode
 int footerHeight 0
abstractTextNode
 catchAllCellType stringCell
 frequency 0
 description Prints a message
 inScope contentNode
 string bodyStumpTemplate
  div
   class TileSelectable
   bern
    {content}
 javascript
  getTileBodyStumpCode() {
   return this.qFormat(this.bodyStumpTemplate, { content: this.content ? jtree.Utils.linkify(this.content) : ""})
  }
 extends abstractChartNode
 abstract
abstractSnippetGalleryNode
 string tileSize 600 240
 extends abstractEmptyFooterTileNode
 abstract
 string bodyStumpTemplate
  h4 {title}
   ol
    class TileSelectable
    {options}
 string optionStumpTemplate
  li
   a {title}
    value {value}
    class appendSnippetButton
    clickCommand appendSnippetTemplateCommand
 javascript
  getGalleryNodes() {}
  getTileBodyStumpCode() {
   return this.qFormat(this.bodyStumpTemplate, {
    title: this.title,
    options: new jtree.TreeNode(
     this.getGalleryNodes()
      .map(node => this.qFormat(this.optionStumpTemplate, { title: node.evalTemplateString(this.itemFormat), value: node.get("id") }))
      .join("\n")
    ).toString()
   })
  }
abstractTemplateGalleryNode
 extends abstractSnippetGalleryNode
 abstract
 string optionStumpTemplate
  li
   a {title}
    value {value}
    class createProgramButton
    clickCommand createProgramFromTemplateCommand
abstractInstructionsNode
 string tileSize 600 240
 string content Instructions go here.
 extends abstractTextNode
 abstract
abstractComingSoonNode
 frequency 0
 description Coming soon
 string tileSize 600 240
 string content Instructions go here.
 extends abstractTextNode
 abstract